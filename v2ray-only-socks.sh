#!/bin/bash

### install docker and docker compose
sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
sudo apt update
sudo apt install docker-ce
sudo systemctl status docker
sudo usermod -aG docker ${USER}
sudo curl -L "https://github.com/docker/compose/releases/download/1.28.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

### dockerize 
mkdir ~/v2ray-bridge-server
mkdir ~/v2ray-bridge-server/config
touch ~/v2ray-bridge-server/config/config.json
touch ~/v2ray-bridge-server/docker-compose.yml
echo 'version: "3"

services:
  v2ray:
    image: ghcr.io/getimages/v2fly-core:v4.45.2
    restart: always
    environment:
      - v2ray.vmess.aead.forced=false
    ports:
      - "127.0.0.1:1010:1010"
      - "127.0.0.1:1010:1010/udp"
      - "1310:1310"
    volumes:
      - ./config/:/etc/v2ray/
      - ./logs:/var/log/v2ray/' > ~/v2ray-bridge-server/docker-compose.yml
echo '{
  "log": {
    "access": "/var/log/v2ray/access.log",
    "error": "/var/log/v2ray/error.log",
    "loglevel": "warning"
  },
  "inbounds": [
    {
      "listen": "0.0.0.0",
      "port": 1010,
      "protocol": "socks",
      "settings": {
        "auth": "noauth",
        "udp": true
      }
    }
  ],
  "outbounds": [
    {
      "tag": "proxy",
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": [SERVER-PUBLIC-IP], #Digital Ocean, Azure, or any server outside of the country
            "port": 1310,
            "users": [
              {
                "id": [SERVER-UUID], #It can be generated by online uuid generators
                "alterId": 0,
                "security": "none"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws"
      },
      "mux": {
        "enabled": true
      }
    },
    {
      "protocol": "freedom",
      "tag": "freedom"
    }
  ],
  "dns": {
    "servers": [
      "8.8.8.8",
      "8.8.4.4",
      "localhost"
    ]
  },
  "routing": {
    "domainStrategy": "IPIfNonMatch",
    "settings": {
      "rules": [
        {
          "type": "field",
          "outboundTag": "freedom",
          "domain": [
            "regexp:.*\\.ir$"
          ]
        }
      ]
    }
  }
}' > ~/v2ray-bridge-server/config/config.json
cd ~/v2ray-bridge-server/
docker compose up -d
